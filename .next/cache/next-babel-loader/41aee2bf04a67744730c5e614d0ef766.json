{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\projectA1Platform\\\\components\\\\PostForm.js\";\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { Input, Avatar, Form, Button, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST, ADD_POST_SUCCESS } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var _leadingZeros = function _leadingZeros(n, digits) {\n    var zero = '';\n    n = n.toString();\n\n    if (n.length < digits) {\n      for (var i = 0; i < digits - n.length; i++) {\n        zero += '0';\n      }\n    }\n\n    return zero + n;\n  };\n\n  var _getTimeStamp = function _getTimeStamp() {\n    var d = new Date();\n\n    var s = _leadingZeros(d.getFullYear(), 4) + '-' + _leadingZeros(d.getMonth() + 1, 2) + '-' + _leadingZeros(d.getDate(), 2) + ' ' + _leadingZeros(d.getHours(), 2) + ':' + _leadingZeros(d.getMinutes(), 2) + ':' + _leadingZeros(d.getSeconds(), 2);\n\n    return s;\n  };\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      me = _useSelector.me,\n      addedPost = _useSelector.addedPost;\n\n  var checkbox = useRef(null);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      id = _useState6[0],\n      setId = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      check = _useState8[0],\n      setCheck = _useState8[1];\n\n  var _useState9 = useState(me),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nickname = _useState10[0],\n      setNickname = _useState10[1];\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onChangeTile = useCallback(function (e) {\n    setTitle(e.target.value);\n  }, []);\n  var onCheck = useCallback(function (e) {\n    setCheck(e.target.checked);\n  });\n  var onSubmitPost = useCallback(function (e) {\n    e.preventDefault();\n    setId(function (pre) {\n      return _parseInt(pre) + 1;\n    });\n    dispatch({\n      type: ADD_POST,\n      data: {\n        id: id,\n        me: me,\n        title: title,\n        text: text,\n        check: check,\n        date: _getTimeStamp()\n      }\n    });\n  }, [me, id, text, title, check]);\n  useEffect(function () {\n    if (addedPost) {\n      setText('');\n      setTitle('');\n      setCheck(false);\n      console.dir(checkbox.current.rcCheckbox.state.checked);\n      dispatch({\n        type: ADD_POST_SUCCESS\n      });\n    }\n  }, [addedPost === true]);\n  return React.createElement(Form, {\n    onSubmit: onSubmitPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Input, {\n    readOnly: true,\n    value: me + \"님 반갑습니다.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Input, {\n    addonBefore: \"\\uC81C\\uBAA9\",\n    value: title,\n    onChange: onChangeTile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Input.TextArea, {\n    rows: 10,\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Checkbox, {\n    ref: checkbox,\n    onChange: onCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uC911\\uC694\"), React.createElement(Button, {\n    htmlType: \"submit\",\n    style: {\n      \"float\": 'right'\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\"));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:\\Users\\USER\\projectA1Platform\\components\\PostForm.js"],"names":["React","useState","useCallback","useEffect","useRef","Input","Avatar","Form","Button","Checkbox","useDispatch","useSelector","ADD_POST","ADD_POST_SUCCESS","PostForm","_leadingZeros","n","digits","zero","toString","length","i","_getTimeStamp","d","Date","s","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dispatch","state","post","me","addedPost","checkbox","text","setText","title","setTitle","id","setId","check","setCheck","nickname","setNickname","onChangeText","e","target","value","onChangeTile","onCheck","checked","onSubmitPost","preventDefault","pre","type","data","date","console","dir","current","rcCheckbox"],"mappings":"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","sourcesContent":["import React,{useState, useCallback, useEffect, useRef} from 'react';\r\nimport {Input, Avatar, Form, Button, Checkbox} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ADD_POST, ADD_POST_SUCCESS} from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n  const _leadingZeros = (n, digits) => {\r\n    var zero = '';\r\n    n = n.toString();\r\n    if (n.length < digits) {\r\n      for (let i = 0; i < digits - n.length; i++)\r\n        zero += '0';\r\n    }\r\n    return zero + n;\r\n  }\r\n\r\n    const _getTimeStamp = () => {\r\n    var d = new Date();\r\n    var s =\r\n      _leadingZeros(d.getFullYear(), 4) + '-' +\r\n      _leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n      _leadingZeros(d.getDate(), 2) + ' ' +\r\n      _leadingZeros(d.getHours(), 2) + ':' +\r\n      _leadingZeros(d.getMinutes(), 2) + ':' +\r\n      _leadingZeros(d.getSeconds(), 2);\r\n    return s;\r\n  }\r\n\r\nconst dispatch = useDispatch();\r\nconst {me, addedPost} = useSelector(state => state.post);\r\nconst checkbox = useRef(null);\r\nconst [text, setText] = useState('');\r\nconst [title, setTitle] = useState('');\r\nconst [id, setId] = useState(0);\r\nconst [check, setCheck] = useState(false);\r\nconst [nickname, setNickname] = useState(me);\r\n\r\n\r\n  const onChangeText = useCallback(e=>{\r\n    setText(e.target.value);\r\n  },[]);\r\n  const onChangeTile = useCallback(e=>{\r\n    setTitle(e.target.value);\r\n  },[]);\r\n  const onCheck = useCallback(e=>{\r\n    setCheck(e.target.checked);\r\n  })\r\n\r\n  const onSubmitPost = useCallback(e=>{\r\n    e.preventDefault();\r\n    setId(pre=> parseInt(pre)+1)\r\n    dispatch({\r\n      type:ADD_POST,\r\n      data:{\r\n        id,\r\n        me,\r\n        title,\r\n        text,\r\n        check,\r\n        date:_getTimeStamp(),\r\n      }\r\n    })\r\n  },[me,id, text, title, check]);\r\n\r\n  useEffect(()=>{\r\n    if(addedPost){\r\n      setText('');\r\n      setTitle('');\r\n      setCheck(false);\r\n      console.dir(checkbox.current.rcCheckbox.state.checked);\r\n      dispatch({\r\n        type:ADD_POST_SUCCESS\r\n      })\r\n    }\r\n  },[addedPost === true]);\r\n\r\n  return(\r\n    <Form onSubmit={onSubmitPost}>\r\n      <Input readOnly value={me+\"님 반갑습니다.\"}/>\r\n      <Input addonBefore=\"제목\" value={title} onChange={onChangeTile}/>\r\n      <Input.TextArea rows={10} value={text} onChange={onChangeText}/>\r\n      <Checkbox ref={checkbox} onChange={onCheck}>중요</Checkbox>\r\n      <Button htmlType=\"submit\" style={{float:'right'}} type=\"primary\">등록</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}