{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\projectA1Platform\\\\components\\\\PostCard.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Icon, Button, Avatar, Form, List, Input, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { FIX_POST } from '../reducers/post';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n  //console.dir(post)\n  var dispatch = useDispatch();\n  var fixBtn = useRef(null);\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      me = _useSelector.me;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      fix = _useState2[0],\n      setFix = _useState2[1];\n\n  var _useState3 = useState(post.title),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fixText = _useState4[0],\n      setFixText = _useState4[1];\n\n  var _useState5 = useState(post.text),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fixTitle = _useState6[0],\n      setFixTitle = _useState6[1];\n\n  var onFix = useCallback(function (e) {\n    if (me === post.me) {\n      setFix(function (pre) {\n        return !pre;\n      });\n\n      if (!fix) {\n        var id = post.me + post.date;\n        var index = mainPosts.findIndex(function (r) {\n          return r.id === id;\n        });\n        dispatch({\n          type: FIX_POST,\n          data: {\n            index: index,\n            fixText: fixText,\n            fixTitle: fixTitle\n          }\n        });\n      }\n    }\n  }, [me, fix, fixText, fixTitle]);\n  var onChangeFixTitle = useCallback(function (e) {\n    setFixTitle(e.target.value);\n  }, []);\n  var onChangeFixText = useCallback(function (e) {\n    setFixText(e.target.value);\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      margin: \"15px\",\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: React.createElement(React.Fragment, null, fix ? React.createElement(\"div\", {\n      style: {\n        width: \"70%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, post.title) : React.createElement(Input, {\n      style: {\n        width: \"70%\"\n      },\n      value: fixTitle,\n      onChange: onChangeFixTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, post.date)),\n    key: post.date,\n    extra: me == post.me ? React.createElement(Button, {\n      ref: fixBtn,\n      onClick: onFix,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\uC218\\uC815\") : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Card.Meta, {\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, post.me[0]),\n    description: fix ? post.text : React.createElement(Input.TextArea, {\n      value: fixText,\n      onChange: onChangeFixText,\n      rows: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    text: PropTypes.string,\n    me: PropTypes.string\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["C:\\Users\\USER\\projectA1Platform\\components\\PostCard.js"],"names":["React","useState","useEffect","useCallback","useRef","useSelector","useDispatch","Card","Icon","Button","Avatar","Form","List","Input","Comment","PropTypes","FIX_POST","PostCard","post","dispatch","fixBtn","state","mainPosts","me","fix","setFix","title","fixText","setFixText","text","fixTitle","setFixTitle","onFix","e","pre","id","date","index","findIndex","r","type","data","onChangeFixTitle","target","value","onChangeFixText","margin","padding","width","propTypes","shape","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,WAAnC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAuDC,OAAvD,QAAqE,MAArE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC3B;AACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,MAAMc,MAAM,GAAGhB,MAAM,CAAC,IAAD,CAArB;;AAH2B,qBAIHC,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACH,IAAV;AAAA,GAAN,CAJR;AAAA,MAIpBI,SAJoB,gBAIpBA,SAJoB;AAAA,MAITC,EAJS,gBAITA,EAJS;;AAAA,kBAKLtB,QAAQ,CAAC,IAAD,CALH;AAAA;AAAA,MAKpBuB,GALoB;AAAA,MAKfC,MALe;;AAAA,mBAMGxB,QAAQ,CAACiB,IAAI,CAACQ,KAAN,CANX;AAAA;AAAA,MAMpBC,OANoB;AAAA,MAMXC,UANW;;AAAA,mBAOK3B,QAAQ,CAACiB,IAAI,CAACW,IAAN,CAPb;AAAA;AAAA,MAOpBC,QAPoB;AAAA,MAOVC,WAPU;;AAS3B,MAAMC,KAAK,GAAG7B,WAAW,CAAC,UAAA8B,CAAC,EAAG;AAC5B,QAAGV,EAAE,KAAKL,IAAI,CAACK,EAAf,EAAkB;AAChBE,MAAAA,MAAM,CAAE,UAAAS,GAAG;AAAA,eAAG,CAACA,GAAJ;AAAA,OAAL,CAAN;;AACA,UAAG,CAACV,GAAJ,EAAQ;AACN,YAAMW,EAAE,GAAGjB,IAAI,CAACK,EAAL,GAAQL,IAAI,CAACkB,IAAxB;AACA,YAAMC,KAAK,GAAGf,SAAS,CAACgB,SAAV,CAAoB,UAAAC,CAAC;AAAA,iBAAGA,CAAC,CAACJ,EAAF,KAASA,EAAZ;AAAA,SAArB,CAAd;AACAhB,QAAAA,QAAQ,CAAC;AACPqB,UAAAA,IAAI,EAACxB,QADE;AAEPyB,UAAAA,IAAI,EAAC;AAACJ,YAAAA,KAAK,EAALA,KAAD;AAAOV,YAAAA,OAAO,EAAPA,OAAP;AAAeG,YAAAA,QAAQ,EAARA;AAAf;AAFE,SAAD,CAAR;AAID;AACF;AACF,GAZwB,EAYvB,CAACP,EAAD,EAAKC,GAAL,EAAUG,OAAV,EAAmBG,QAAnB,CAZuB,CAAzB;AAcA,MAAMY,gBAAgB,GAAGvC,WAAW,CAAC,UAAA8B,CAAC,EAAE;AACtCF,IAAAA,WAAW,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV,CAAX;AACD,GAFmC,EAElC,EAFkC,CAApC;AAGA,MAAMC,eAAe,GAAG1C,WAAW,CAAC,UAAA8B,CAAC,EAAE;AACrCL,IAAAA,UAAU,CAACK,CAAC,CAACU,MAAF,CAASC,KAAV,CAAV;AACD,GAFkC,EAEjC,EAFiC,CAAnC;AAKA,SACE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAC,MAAR;AAAgBC,MAAAA,OAAO,EAAC;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACC,IAAA,KAAK,EACH,0CACGvB,GAAG,GAAG;AAAK,MAAA,KAAK,EAAE;AAACwB,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B9B,IAAI,CAACQ,KAAjC,CAAH,GAAmD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACsB,QAAAA,KAAK,EAAC;AAAP,OAAd;AAA6B,MAAA,KAAK,EAAElB,QAApC;AAA8C,MAAA,QAAQ,EAAEY,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMxB,IAAI,CAACkB,IAAX,CAFD,CAFH;AAOC,IAAA,GAAG,EAAElB,IAAI,CAACkB,IAPX;AAQC,IAAA,KAAK,EAAEb,EAAE,IAAKL,IAAI,CAACK,EAAZ,GAAiB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEH,MAAb;AAAqB,MAAA,OAAO,EAAEY,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAjB,GAAoE,IAR5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUC,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASd,IAAI,CAACK,EAAL,CAAQ,CAAR,CAAT,CADV;AAEE,IAAA,WAAW,EAAGC,GAAG,GAAGN,IAAI,CAACW,IAAR,GAAe,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAEF,OAAvB;AAAgC,MAAA,QAAQ,EAAEkB,eAA1C;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,CADF,CADF;AAmBD,CAlDD;;AAoDA5B,QAAQ,CAACgC,SAAT,GAAqB;AACnB/B,EAAAA,IAAI,EAAEH,SAAS,CAACmC,KAAV,CAAgB;AACpBxB,IAAAA,KAAK,EAACX,SAAS,CAACoC,MADI;AAEpBtB,IAAAA,IAAI,EAACd,SAAS,CAACoC,MAFK;AAGpB5B,IAAAA,EAAE,EAACR,SAAS,CAACoC;AAHO,GAAhB;AADa,CAArB;AAQA,eAAelC,QAAf","sourcesContent":["import React,{useState, useEffect, useCallback, useRef} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Card, Icon, Button, Avatar, Form, List, Input, Comment} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {FIX_POST} from '../reducers/post';\r\n\r\nconst PostCard = ({post}) => {\r\n  //console.dir(post)\r\n  const dispatch = useDispatch();\r\n  const fixBtn = useRef(null);\r\n  const {mainPosts, me} = useSelector(state => state.post);\r\n  const [fix, setFix] = useState(true);\r\n  const [fixText, setFixText] = useState(post.title);\r\n  const [fixTitle, setFixTitle] = useState(post.text);\r\n\r\n  const onFix = useCallback(e =>{\r\n    if(me === post.me){\r\n      setFix( pre=> !pre);\r\n      if(!fix){\r\n        const id = post.me+post.date;\r\n        const index = mainPosts.findIndex(r=> r.id === id);\r\n        dispatch({\r\n          type:FIX_POST,\r\n          data:{index,fixText,fixTitle}\r\n        })\r\n      }\r\n    }\r\n  },[me, fix, fixText, fixTitle] );\r\n\r\n  const onChangeFixTitle = useCallback(e=>{\r\n    setFixTitle(e.target.value);\r\n  },[]);\r\n  const onChangeFixText = useCallback(e=>{\r\n    setFixText(e.target.value);\r\n  },[]);\r\n\r\n\r\n  return(\r\n    <div style={{margin:\"15px\", padding:15}}>\r\n      <Card\r\n       title={(\r\n         <>\r\n          { fix ? <div style={{width:\"70%\"}}>{post.title}</div> : <Input style={{width:\"70%\"}} value={fixTitle} onChange={onChangeFixTitle}/> }\r\n          <div>{post.date}</div>\r\n         </>\r\n       )}\r\n       key={post.date}\r\n       extra={me  == post.me ? <Button ref={fixBtn} onClick={onFix}>수정</Button> : null}\r\n      >\r\n       <Card.Meta\r\n         avatar={<Avatar>{post.me[0]}</Avatar>}\r\n         description={ fix ? post.text : <Input.TextArea value={fixText} onChange={onChangeFixText} rows={4}/>}\r\n       />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    title:PropTypes.string,\r\n    text:PropTypes.string,\r\n    me:PropTypes.string\r\n  })\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}