{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\projectA1Platform\\\\components\\\\PostCard.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Icon, Button, Avatar, Form, List, Input, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { FIX_POST } from '../reducers/post';\n\nconst PostCard = ({\n  post\n}) => {\n  console.dir(post);\n  const dispatch = useDispatch();\n  const fixBtn = useRef(null);\n  const {\n    mainPosts,\n    me\n  } = useSelector(state => state.post);\n  const [fix, setFix] = useState(true);\n  const [fixText, setFixText] = useState(post.title);\n  const onFix = useCallback(e => {\n    if (me === post.me) {\n      setFix(pre => !pre);\n      console.dir(fixBtn.current.innerHTML); //fixBtn.current.props.children.innerText = \"완료\"\n    } // const id = post.me+post.date;\n    // const index = mainPosts.findIndex(r=> r.id === id);\n    // console.log(index);\n    // dispatch({\n    //   type:FIX_POST,\n    //   data:index\n    // })\n\n  }, [me]);\n  const onChangeFixText = useCallback(e => {\n    setFixText(e.target.value);\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      margin: \"15px\",\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: React.createElement(React.Fragment, null, fix ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, post.title) : React.createElement(Input, {\n      value: fixText,\n      onChange: onChangeFixText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, post.date)),\n    key: post.date,\n    extra: me == post.me ? React.createElement(Button, {\n      ref: fixBtn,\n      onClick: onFix,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\uC218\\uC815\") : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card.Meta, {\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, post.me[0]),\n    description: post.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    text: PropTypes.string,\n    me: PropTypes.string\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["C:\\Users\\USER\\projectA1Platform\\components\\PostCard.js"],"names":["React","useState","useEffect","useCallback","useRef","useSelector","useDispatch","Card","Icon","Button","Avatar","Form","List","Input","Comment","PropTypes","FIX_POST","PostCard","post","console","dir","dispatch","fixBtn","mainPosts","me","state","fix","setFix","fixText","setFixText","title","onFix","e","pre","current","innerHTML","onChangeFixText","target","value","margin","padding","date","text","propTypes","shape","string"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useCallback, useRef} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Card, Icon, Button, Avatar, Form, List, Input, Comment} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {FIX_POST} from '../reducers/post';\r\n\r\nconst PostCard = ({post}) => {\r\n  console.dir(post)\r\n  const dispatch = useDispatch();\r\n  const fixBtn = useRef(null);\r\n  const {mainPosts, me} = useSelector(state => state.post);\r\n  const [fix, setFix] = useState(true);\r\n  const [fixText, setFixText] = useState(post.title)\r\n\r\n  const onFix = useCallback(e =>{\r\n    if(me === post.me){\r\n      setFix( pre=> !pre);\r\n      console.dir(fixBtn.current.innerHTML);\r\n      //fixBtn.current.props.children.innerText = \"완료\"\r\n    }\r\n    // const id = post.me+post.date;\r\n    // const index = mainPosts.findIndex(r=> r.id === id);\r\n    // console.log(index);\r\n    // dispatch({\r\n    //   type:FIX_POST,\r\n    //   data:index\r\n    // })\r\n  },[me]);\r\n\r\n  const onChangeFixText = useCallback(e=>{\r\n    setFixText(e.target.value);\r\n  },[]);\r\n  return(\r\n    <div style={{margin:\"15px\", padding:15}}>\r\n      <Card\r\n       title={(\r\n         <>\r\n          { fix ? <div>{post.title}</div> : <Input value={fixText} onChange={onChangeFixText} />}\r\n          <div>{post.date}</div>\r\n         </>\r\n       )}\r\n       key={post.date}\r\n       extra={me  == post.me ? <Button ref={fixBtn} onClick={onFix}>수정</Button> : null}\r\n      >\r\n       <Card.Meta\r\n         avatar={<Avatar>{post.me[0]}</Avatar>}\r\n         description={post.text}\r\n       />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    title:PropTypes.string,\r\n    text:PropTypes.string,\r\n    me:PropTypes.string\r\n  })\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}