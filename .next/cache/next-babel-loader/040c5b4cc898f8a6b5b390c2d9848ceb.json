{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\projectA1Platform\\\\components\\\\PostForm.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Input, Avatar, Form, Button, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST, ADD_POST_SUCCESS } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var _leadingZeros = function _leadingZeros(n, digits) {\n    var zero = '';\n    n = n.toString();\n\n    if (n.length < digits) {\n      for (var i = 0; i < digits - n.length; i++) {\n        zero += '0';\n      }\n    }\n\n    return zero + n;\n  };\n\n  var _getTimeStamp = function _getTimeStamp() {\n    var d = new Date();\n\n    var s = _leadingZeros(d.getFullYear(), 4) + '-' + _leadingZeros(d.getMonth() + 1, 2) + '-' + _leadingZeros(d.getDate(), 2) + ' ' + _leadingZeros(d.getHours(), 2) + ':' + _leadingZeros(d.getMinutes(), 2) + ':' + _leadingZeros(d.getSeconds(), 2);\n\n    return s;\n  };\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      me = _useSelector.me,\n      addedPost = _useSelector.addedPost;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(me),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nickname = _useState6[0],\n      setNickname = _useState6[1];\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onChangeTile = useCallback(function (e) {\n    setTitle(e.target.value);\n  }, []);\n  var onSubmitPost = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST,\n      data: {\n        id: me + _getTimeStamp(),\n        me: me,\n        title: title,\n        text: text,\n        date: _getTimeStamp()\n      }\n    });\n  }, [me, text, title]);\n  useEffect(function () {\n    if (addedPost) {\n      setText('');\n      setTitle('');\n      dispatch({\n        type: ADD_POST_SUCCESS\n      });\n    }\n  }, [addedPost === true]);\n  return React.createElement(Form, {\n    onSubmit: onSubmitPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Input, {\n    readOnly: true,\n    value: me + \"님 반갑습니다.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Input, {\n    addonBefore: \"\\uC81C\\uBAA9\",\n    value: title,\n    onChange: onChangeTile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Input.TextArea, {\n    rows: 10,\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Checkbox, {\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Checkbox\"), React.createElement(Button, {\n    htmlType: \"submit\",\n    style: {\n      \"float\": 'right'\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\"));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:\\Users\\USER\\projectA1Platform\\components\\PostForm.js"],"names":["React","useState","useCallback","useEffect","Input","Avatar","Form","Button","Checkbox","useDispatch","useSelector","ADD_POST","ADD_POST_SUCCESS","PostForm","_leadingZeros","n","digits","zero","toString","length","i","_getTimeStamp","d","Date","s","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dispatch","state","post","me","addedPost","text","setText","title","setTitle","nickname","setNickname","onChangeText","e","target","value","onChangeTile","onSubmitPost","preventDefault","type","data","id","date","onChange"],"mappings":"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","sourcesContent":["import React,{useState, useCallback, useEffect} from 'react';\r\nimport {Input, Avatar, Form, Button, Checkbox} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ADD_POST, ADD_POST_SUCCESS} from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n  const _leadingZeros = (n, digits) => {\r\n    var zero = '';\r\n    n = n.toString();\r\n    if (n.length < digits) {\r\n      for (let i = 0; i < digits - n.length; i++)\r\n        zero += '0';\r\n    }\r\n    return zero + n;\r\n  }\r\n\r\n    const _getTimeStamp = () => {\r\n    var d = new Date();\r\n    var s =\r\n      _leadingZeros(d.getFullYear(), 4) + '-' +\r\n      _leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n      _leadingZeros(d.getDate(), 2) + ' ' +\r\n      _leadingZeros(d.getHours(), 2) + ':' +\r\n      _leadingZeros(d.getMinutes(), 2) + ':' +\r\n      _leadingZeros(d.getSeconds(), 2);\r\n    return s;\r\n  }\r\n\r\nconst dispatch = useDispatch();\r\nconst {me, addedPost} = useSelector(state => state.post);\r\nconst [text, setText] = useState('');\r\nconst [title, setTitle] = useState('');\r\nconst [nickname, setNickname] = useState(me);\r\n\r\n\r\n  const onChangeText = useCallback(e=>{\r\n    setText(e.target.value);\r\n  },[]);\r\n  const onChangeTile = useCallback(e=>{\r\n    setTitle(e.target.value);\r\n  },[]);\r\n\r\n  const onSubmitPost = useCallback(e=>{\r\n    e.preventDefault();\r\n    dispatch({\r\n      type:ADD_POST,\r\n      data:{\r\n        id:me+_getTimeStamp(),\r\n        me,\r\n        title,\r\n        text,\r\n        date:_getTimeStamp(),\r\n      }\r\n    })\r\n  },[me, text, title]);\r\n\r\n  useEffect(()=>{\r\n    if(addedPost){\r\n      setText('');\r\n      setTitle('');\r\n      dispatch({\r\n        type:ADD_POST_SUCCESS\r\n      })\r\n    }\r\n  },[addedPost === true]);\r\n\r\n  return(\r\n    <Form onSubmit={onSubmitPost}>\r\n      <Input readOnly value={me+\"님 반갑습니다.\"}/>\r\n      <Input addonBefore=\"제목\" value={title} onChange={onChangeTile}/>\r\n      <Input.TextArea rows={10} value={text} onChange={onChangeText}/>\r\n      <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n      <Button htmlType=\"submit\" style={{float:'right'}} type=\"primary\">등록</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}