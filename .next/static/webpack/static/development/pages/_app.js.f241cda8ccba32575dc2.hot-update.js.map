{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.f241cda8ccba32575dc2.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React,{useState, useCallback, useEffect} from 'react';\r\nimport {Input, Avatar, Form, Button, Checkbox} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ADD_POST, ADD_POST_SUCCESS} from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n  const _leadingZeros = (n, digits) => {\r\n    var zero = '';\r\n    n = n.toString();\r\n    if (n.length < digits) {\r\n      for (let i = 0; i < digits - n.length; i++)\r\n        zero += '0';\r\n    }\r\n    return zero + n;\r\n  }\r\n\r\n    const _getTimeStamp = () => {\r\n    var d = new Date();\r\n    var s =\r\n      _leadingZeros(d.getFullYear(), 4) + '-' +\r\n      _leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n      _leadingZeros(d.getDate(), 2) + ' ' +\r\n      _leadingZeros(d.getHours(), 2) + ':' +\r\n      _leadingZeros(d.getMinutes(), 2) + ':' +\r\n      _leadingZeros(d.getSeconds(), 2);\r\n    return s;\r\n  }\r\n\r\nconst dispatch = useDispatch();\r\nconst {me, addedPost} = useSelector(state => state.post);\r\nconst [text, setText] = useState('');\r\nconst [title, setTitle] = useState('');\r\nconst [check, setCheck] = useState(false);\r\nconst [nickname, setNickname] = useState(me);\r\n\r\n\r\n  const onChangeText = useCallback(e=>{\r\n    setText(e.target.value);\r\n  },[]);\r\n  const onChangeTile = useCallback(e=>{\r\n    setTitle(e.target.value);\r\n  },[]);\r\n  const onCheck = useCallback(e=>{\r\n    console.dir(e.target.checked)\r\n  })\r\n\r\n  const onSubmitPost = useCallback(e=>{\r\n    e.preventDefault();\r\n    dispatch({\r\n      type:ADD_POST,\r\n      data:{\r\n        id:me+_getTimeStamp(),\r\n        me,\r\n        title,\r\n        text,\r\n        date:_getTimeStamp(),\r\n      }\r\n    })\r\n  },[me, text, title]);\r\n\r\n  useEffect(()=>{\r\n    if(addedPost){\r\n      setText('');\r\n      setTitle('');\r\n      dispatch({\r\n        type:ADD_POST_SUCCESS\r\n      })\r\n    }\r\n  },[addedPost === true]);\r\n\r\n  return(\r\n    <Form onSubmit={onSubmitPost}>\r\n      <Input readOnly value={me+\"님 반갑습니다.\"}/>\r\n      <Input addonBefore=\"제목\" value={title} onChange={onChangeTile}/>\r\n      <Input.TextArea rows={10} value={text} onChange={onChangeText}/>\r\n      <Checkbox onChange={onCheck}>중요</Checkbox>\r\n      <Button htmlType=\"submit\" style={{float:'right'}} type=\"primary\">등록</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PostForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAzBA;AAyBA;AAAA;AAzBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}